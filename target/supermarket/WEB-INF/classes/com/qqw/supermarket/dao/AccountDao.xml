<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qqw.supermarket.dao.AccountDao">
  <resultMap id="BaseResultMap" type="com.qqw.supermarket.model.Account">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
    <result column="locked" jdbcType="BIT" property="locked" />
    <result column="last_login_at" jdbcType="TIMESTAMP" property="lastLoginAt" />
    <result column="is_del" jdbcType="BIT" property="del" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
  </resultMap>
  <resultMap id="ResultMap" type="com.qqw.supermarket.model.AccountDTO">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="account" jdbcType="VARCHAR" property="account"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
    <result column="salt" jdbcType="VARCHAR" property="salt"/>
    <result column="head_pic" jdbcType="VARCHAR" property="headPic"/>
    <result column="locked" jdbcType="BIT" property="locked"/>
    <result column="last_login_at" jdbcType="TIMESTAMP" property="lastLoginAt"/>
    <result column="is_del" jdbcType="BIT" property="del"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
    <collection property="roles" ofType="role">
      <id column="rid" property="id"></id>
      <result column="name" property="name"></result>
    </collection>
  </resultMap>

  <resultMap id="ResultMap1" type="com.qqw.supermarket.model.AccountDTO">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="account" jdbcType="VARCHAR" property="account"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
    <result column="salt" jdbcType="VARCHAR" property="salt"/>
    <result column="head_pic" jdbcType="VARCHAR" property="headPic"/>
    <result column="locked" jdbcType="BIT" property="locked"/>
    <result column="last_login_at" jdbcType="TIMESTAMP" property="lastLoginAt"/>
    <result column="is_del" jdbcType="BIT" property="del"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
    <collection property="roles" ofType="role"
                select="com.qqw.supermarket.dao.RoleDao.selectByAccountId"
                column="id">
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, real_name, salt, head_pic, locked, last_login_at, is_del, 
    status, create_at, update_at
  </sql>
  <select id="selectById" parameterType="java.lang.String" resultMap="ResultMap">
    SELECT
    a.*,
    r.id AS rid,
    r.NAME
    FROM
    system_account a
    LEFT JOIN
    system_account_role ar on (a.id = ar.account_id)
    LEFT JOIN
    system_role r on (r.id = ar.role_id)
    WHERE
    a.is_del = 0 and a.id = #{id}
  </select>

  <select id="selectByRId" parameterType="java.lang.Integer" resultMap="ResultMap">
    SELECT
    a.*,
    r.id AS rid,
    r.NAME
    FROM
    system_account a
    LEFT JOIN
    system_account_role ar on (a.id = ar.account_id)
    LEFT JOIN
    system_role r on (r.id = ar.role_id)
    WHERE
    a.is_del = 0 and r.id = #{id}
  </select>

  <select id="selectAll" parameterType="map" resultMap="ResultMap1">
    SELECT
    *
    FROM
    system_account
    WHERE
    is_del = 0
    <if test="search != null and search != ''">
      and (account like '%${search}%' or real_name like '%${search}%')
    </if>
    <if test="sort != null">
      order by ${sort}
    </if>
    <if test="sort != null and order != null">
      ${order}
    </if>
  </select>

  <select id="listAccount"  resultMap="BaseResultMap" parameterType="map">
  select
  <include refid="Base_Column_List" />
  from system_account
  where is_del = 0
  <if test="search != null and search != ''">
    and (account like '%${search}%' or real_name like '%${search}%')
  </if>
  <if test="sort != null">
    order by ${sort}
  </if>
  <if test="sort != null and order != null">
    ${order}
  </if>
  <if test="offset != null and limit != null">
    limit #{offset}, #{limit}
  </if>
</select>

  <select id="listAccountByPage"  resultMap="ResultMap" parameterType="map">
    SELECT
    a.*,
    r.id AS rid,
    r.NAME
    FROM
    system_account a
    LEFT JOIN
    system_account_role ar on (a.id = ar.account_id)
    LEFT JOIN
    system_role r on (r.id = ar.role_id)
    WHERE
    a.is_del = 0
    <if test="search != null and search != ''">
      and (a.account like '%${search}%' or a.real_name like '%${search}%')
    </if>
    <if test="sort != null">
      order by ${sort}
    </if>
    <if test="sort != null and order != null">
      ${order}
    </if>
  </select>

  <select id="count" resultType="int">
    select
    count(*)
    from system_account
    where is_del = 0
  </select>

  <select id="selectByAccount" parameterType="java.lang.String" resultMap="ResultMap1">
    select
    <include refid="Base_Column_List" />
    from system_account
    where is_del = 0 and account = #{account}
  </select>
  <update id="deleteById" parameterType="java.lang.String">
    update system_account set is_del = 1
    where id = #{id}
  </update>
  <insert id="insertAccount" keyColumn="id" keyProperty="id" parameterType="com.qqw.supermarket.model.Account" useGeneratedKeys="true">
    insert into system_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="lastLoginAt != null">
        last_login_at,
      </if>
      <if test="del != null">
        is_del,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="account != null">
        #{account},
      </if>
      <if test="password != null">
        #{password},
      </if>
      <if test="realName != null">
        #{realName},
      </if>
      <if test="salt != null">
        #{salt},
      </if>
      <if test="headPic != null">
        #{headPic},
      </if>
      <if test="locked != null">
        #{locked},
      </if>
      <if test="lastLoginAt != null">
        #{lastLoginAt},
      </if>
      <if test="del != null">
        #{del},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="createAt != null">
        #{createAt},
      </if>
      <if test="updateAt != null">
        #{updateAt},
      </if>
    </trim>
  </insert>
  <update id="updateAccount" parameterType="com.qqw.supermarket.model.Account">
    update system_account
    <set>
      <if test="account != null">
        account = #{account},
      </if>
      <if test="password != null">
        password = #{password},
      </if>
      <if test="realName != null">
        real_name = #{realName},
      </if>
      <if test="salt != null">
        salt = #{salt},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic},
      </if>
      <if test="locked != null">
        locked = #{locked},
      </if>
      <if test="lastLoginAt != null">
        last_login_at = #{lastLoginAt},
      </if>
      <if test="del != null">
        is_del = #{del},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="createAt != null">
        create_at = #{createAt},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt},
      </if>
    </set>
    where id = #{id}
  </update>

  <update id="batchDelete" parameterType="List">
    update system_account set is_del = 1
    <where>
    <if test="list != null and list.size() > 0">
      <foreach collection="list" item="id" open="id in (" separator="," close=")">
      #{id}
    </foreach>
    </if>
    </where>
  </update>

  <update id="updatepwdById" parameterType="java.lang.String">
    update system_account set password = #{password}
    where is_del = 0 and id = #{id}
  </update>

</mapper>